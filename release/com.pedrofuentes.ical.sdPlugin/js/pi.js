/*! For license information please see pi.js.LICENSE.txt */
(()=>{"use strict";window.streamDeck=new class{constructor(){this.connected=!1,this._websocket=null,this.port=null,this.uuid=null,this.register=null,this.info=null,this.activeActions={},this.availableActions={},this._globalSettings={},this._piCallback=()=>{},this._globalSettingsCallback=()=>{},this._initialLoadCallback=null,this._sendToPluginCallback=()=>{},this._propertyInspectorDidAppearCallback=()=>{},window.connectElgatoStreamDeckSocket=(t,e,i,s)=>{this.port=t,this.uuid=e,this.register=i,this.info=s,this.websocket=new WebSocket("ws://127.0.0.1:"+t),this.websocket.onopen=()=>{this.onOpen()},this.websocket.onmessage=t=>{this.onMessage(t)}}}get websocket(){return this._websocket}set websocket(t){this._websocket=t}get globalSettings(){return this._globalSettings}onOpen(){this.registerPluginOrPI(this.register,this.uuid),this.requestGlobalSettings(this.uuid)}onMessage(t){const e=JSON.parse(t.data),i=e.event,s=e.action,n=e.context,o=e.payload;let a;if("keyUp"===i)n in this.activeActions&&this.activeActions[n].onKeyUp(n,o.settings,o.coordinates,o.userDesiredState,o.state);else if("willAppear"===i){if(a=o.settings,!(s in this.availableActions))throw new Error(`${n} is not in the available actions list`);n in this.activeActions||(this.activeActions[n]=this.addAction(s,n,a)),this.activeActions[n].onWillAppear(n,a,o.coordinates)}else"willDisappear"===i?n in this.activeActions&&(this.activeActions[n].onWillDisappear(n,a,o.coordinates),delete this.activeActions[n]):"didReceiveGlobalSettings"===i?(this._globalSettings=o.settings,"function"==typeof this._initialLoadCallback&&(this._initialLoadCallback(),this._initialLoadCallback=null),this._globalSettingsCallback()):"didReceiveSettings"===i?(a=o.settings,n in this.activeActions&&this.activeActions[n].setSettings(a)):"propertyInspectorDidAppear"===i?(this.sendToPropertyInspector(s,n,""),this._propertyInspectorDidAppearCallback()):"sendToPropertyInspector"===i?this._piCallback():"sendToPlugin"===i&&this._sendToPluginCallback()}onPiLoaded(t){"function"==typeof t&&(this._piCallback=t)}onGlobalSettingsReceived(t){"function"==typeof t&&(this._globalSettingsCallback=t)}onInitialLoad(t){"function"==typeof t&&(this._initialLoadCallback=t)}onSendToPlugin(t){"function"==typeof t&&(this._sendToPluginCallback=t)}onPropertyInspectorDidAppear(t){"function"==typeof t&&(this._propertyInspectorDidAppearCallback=t)}executeOnAvailableActions(t){for(const e in this.activeActions)t(e,this.activeActions[e])}registerPluginOrPI(t){if(this._websocket){const e={event:t,uuid:this.uuid};this._websocket.send(JSON.stringify(e))}}requestGlobalSettings(){if(this._websocket){const t={event:"getGlobalSettings",context:this.uuid};this._websocket.send(JSON.stringify(t))}}updateGlobalSettings(t,e){this._globalSettings[t]=e,this.saveGlobalSettings()}saveGlobalSettings(){if(this._websocket){const t={event:"setGlobalSettings",context:this.uuid,payload:this._globalSettings};this._websocket.send(JSON.stringify(t))}}saveSettings(t,e,i){if(this._websocket){const s={action:t,event:"setSettings",context:e,payload:i};this._websocket.send(JSON.stringify(s))}}registerAction(t,e){this.availableActions[e]=t}addAction(t,e,i){return new this.availableActions[t](t,this,e,i)}sendToPropertyInspector(t,e,i){if(this._websocket){const s={action:t,event:"sendToPropertyInspector",context:e,payload:i};this._websocket.send(JSON.stringify(s))}}sendToPlugin(t,e,i){if(this._websocket){const s={action:t,event:"sendToPlugin",context:e,payload:i};this._websocket.send(JSON.stringify(s))}}log(t){const e=new Date,i=`${e.toLocaleDateString()} ${e.toLocaleTimeString()}`;if(console.log(i,t),this._websocket){const e={event:"logMessage",payload:{message:t}};this._websocket.send(JSON.stringify(e))}}},streamDeck.onPiLoaded((()=>{document.getElementById("url").value=streamDeck.globalSettings.url,document.getElementById("settings").addEventListener("click",(()=>{window.open("setup.html","iCal Settings")}))}))})();